/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Modèle de requête exploité par REMOCRA
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RequeteModele extends TableImpl<Record> {

	private static final long serialVersionUID = 1493469648;

	/**
	 * The reference instance of <code>remocra.requete_modele</code>
	 */
	public static final RequeteModele REQUETE_MODELE = new RequeteModele();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>remocra.requete_modele.id</code>. Identifiant interne auto-généré
	 */
	public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "Identifiant interne auto-généré");

	/**
	 * The column <code>remocra.requete_modele.categorie</code>. Libellé de catégorie permettant de regrouper ou de filtrer potentiellement les modèles selon un thème. Non exploité actuellement dans REMOCRA
	 */
	public final TableField<Record, String> CATEGORIE = createField("categorie", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Libellé de catégorie permettant de regrouper ou de filtrer potentiellement les modèles selon un thème. Non exploité actuellement dans REMOCRA");

	/**
	 * The column <code>remocra.requete_modele.code</code>. Code permettant d'identifier de manière unique et pérenne un modèle de requête
	 */
	public final TableField<Record, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Code permettant d'identifier de manière unique et pérenne un modèle de requête");

	/**
	 * The column <code>remocra.requete_modele.libelle</code>. Libellé affiché en liste déroulante lors du choix du modèle de requête
	 */
	public final TableField<Record, String> LIBELLE = createField("libelle", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Libellé affiché en liste déroulante lors du choix du modèle de requête");

	/**
	 * The column <code>remocra.requete_modele.description</code>. Description longue du modèle de requête. Non exploité actuellement dans ReMOCRA
	 */
	public final TableField<Record, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR, this, "Description longue du modèle de requête. Non exploité actuellement dans ReMOCRA");

	/**
	 * The column <code>remocra.requete_modele.spatial</code>. Le résultat possède une colonne nommée "wkt" contenant de l'information géographique encodée au format WKT
	 */
	public final TableField<Record, Boolean> SPATIAL = createField("spatial", org.jooq.impl.SQLDataType.BOOLEAN, this, "Le résultat possède une colonne nommée \"wkt\" contenant de l'information géographique encodée au format WKT");

	/**
	 * The column <code>remocra.requete_modele.source_sql</code>. Definition de la requête SQL à exécuter sur la base de données REMOCRA pour fournir les informations à retourner. A renseigner dans un CDATA. La requête peut exploiter des paramètres sous la forme ${NOM_DU_PARAMETRE}. Chaque paramètre mentionné doit être référencé dans la table "requete_modele_parametre"
	 */
	public final TableField<Record, String> SOURCE_SQL = createField("source_sql", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "Definition de la requête SQL à exécuter sur la base de données REMOCRA pour fournir les informations à retourner. A renseigner dans un CDATA. La requête peut exploiter des paramètres sous la forme ${NOM_DU_PARAMETRE}. Chaque paramètre mentionné doit être référencé dans la table \"requete_modele_parametre\"");

	/**
	 * Create a <code>remocra.requete_modele</code> table reference
	 */
	public RequeteModele() {
		this("requete_modele", null);
	}

	/**
	 * Create an aliased <code>remocra.requete_modele</code> table reference
	 */
	public RequeteModele(String alias) {
		this(alias, REQUETE_MODELE);
	}

	private RequeteModele(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private RequeteModele(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Remocra.REMOCRA, aliased, parameters, "Modèle de requête exploité par REMOCRA");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<Record, Long> getIdentity() {
		return Keys.IDENTITY_REQUETE_MODELE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.REQUETE_MODELE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.REQUETE_MODELE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RequeteModele as(String alias) {
		return new RequeteModele(alias, this);
	}

	/**
	 * Rename this table
	 */
	public RequeteModele rename(String name) {
		return new RequeteModele(name, null);
	}
}
