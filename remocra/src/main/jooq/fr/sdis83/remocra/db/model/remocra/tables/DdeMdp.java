/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import fr.sdis83.remocra.db.converter.InstantConverter;
import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.joda.time.Instant;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DdeMdp extends TableImpl<Record> {

	private static final long serialVersionUID = 1336365482;

	/**
	 * The reference instance of <code>remocra.dde_mdp</code>
	 */
	public static final DdeMdp DDE_MDP = new DdeMdp();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>remocra.dde_mdp.id</code>.
	 */
	public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>remocra.dde_mdp.code</code>.
	 */
	public final TableField<Record, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

	/**
	 * The column <code>remocra.dde_mdp.date_demande</code>.
	 */
	public final TableField<Record, Instant> DATE_DEMANDE = createField("date_demande", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "", new InstantConverter());

	/**
	 * The column <code>remocra.dde_mdp.utilisateur</code>.
	 */
	public final TableField<Record, Long> UTILISATEUR = createField("utilisateur", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * Create a <code>remocra.dde_mdp</code> table reference
	 */
	public DdeMdp() {
		this("dde_mdp", null);
	}

	/**
	 * Create an aliased <code>remocra.dde_mdp</code> table reference
	 */
	public DdeMdp(String alias) {
		this(alias, DDE_MDP);
	}

	private DdeMdp(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private DdeMdp(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Remocra.REMOCRA, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<Record, Long> getIdentity() {
		return Keys.IDENTITY_DDE_MDP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.DDE_MDP_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.DDE_MDP_PKEY, Keys.DDE_MDP_CODE_KEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<Record, ?>> getReferences() {
		return Arrays.<ForeignKey<Record, ?>>asList(Keys.DDE_MDP__FK5A4FDE5FA98055B2);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DdeMdp as(String alias) {
		return new DdeMdp(alias, this);
	}

	/**
	 * Rename this table
	 */
	public DdeMdp rename(String name) {
		return new DdeMdp(name, null);
	}
}
