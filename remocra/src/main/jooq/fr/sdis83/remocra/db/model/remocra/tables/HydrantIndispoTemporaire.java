/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.remocra.tables;


import fr.sdis83.remocra.db.converter.InstantConverter;
import fr.sdis83.remocra.db.model.remocra.Keys;
import fr.sdis83.remocra.db.model.remocra.Remocra;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.joda.time.Instant;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * Indisponibilié temporaire d'hydrant
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HydrantIndispoTemporaire extends TableImpl<Record> {

	private static final long serialVersionUID = 2034131197;

	/**
	 * The reference instance of <code>remocra.hydrant_indispo_temporaire</code>
	 */
	public static final HydrantIndispoTemporaire HYDRANT_INDISPO_TEMPORAIRE = new HydrantIndispoTemporaire();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<Record> getRecordType() {
		return Record.class;
	}

	/**
	 * The column <code>remocra.hydrant_indispo_temporaire.id</code>.
	 */
	public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>remocra.hydrant_indispo_temporaire.date_prev_debut</code>.
	 */
	public final TableField<Record, Instant> DATE_PREV_DEBUT = createField("date_prev_debut", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new InstantConverter());

	/**
	 * The column <code>remocra.hydrant_indispo_temporaire.date_prev_fin</code>.
	 */
	public final TableField<Record, Instant> DATE_PREV_FIN = createField("date_prev_fin", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new InstantConverter());

	/**
	 * The column <code>remocra.hydrant_indispo_temporaire.date_debut</code>.
	 */
	public final TableField<Record, Instant> DATE_DEBUT = createField("date_debut", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new InstantConverter());

	/**
	 * The column <code>remocra.hydrant_indispo_temporaire.date_fin</code>.
	 */
	public final TableField<Record, Instant> DATE_FIN = createField("date_fin", org.jooq.impl.SQLDataType.TIMESTAMP, this, "", new InstantConverter());

	/**
	 * The column <code>remocra.hydrant_indispo_temporaire.motif</code>.
	 */
	public final TableField<Record, String> MOTIF = createField("motif", org.jooq.impl.SQLDataType.VARCHAR, this, "");

	/**
	 * The column <code>remocra.hydrant_indispo_temporaire.date_rappel_debut</code>. Date de l'envoi du rappel de debut 
	 */
	public final TableField<Record, Instant> DATE_RAPPEL_DEBUT = createField("date_rappel_debut", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Date de l'envoi du rappel de debut ", new InstantConverter());

	/**
	 * The column <code>remocra.hydrant_indispo_temporaire.date_rappel_fin</code>. Date de l'envoi du rappel de fin 
	 */
	public final TableField<Record, Instant> DATE_RAPPEL_FIN = createField("date_rappel_fin", org.jooq.impl.SQLDataType.TIMESTAMP, this, "Date de l'envoi du rappel de fin ", new InstantConverter());

	/**
	 * The column <code>remocra.hydrant_indispo_temporaire.statut</code>.
	 */
	public final TableField<Record, Long> STATUT = createField("statut", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>remocra.hydrant_indispo_temporaire.total_hydrants</code>.
	 */
	public final TableField<Record, Integer> TOTAL_HYDRANTS = createField("total_hydrants", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>remocra.hydrant_indispo_temporaire</code> table reference
	 */
	public HydrantIndispoTemporaire() {
		this("hydrant_indispo_temporaire", null);
	}

	/**
	 * Create an aliased <code>remocra.hydrant_indispo_temporaire</code> table reference
	 */
	public HydrantIndispoTemporaire(String alias) {
		this(alias, HYDRANT_INDISPO_TEMPORAIRE);
	}

	private HydrantIndispoTemporaire(String alias, Table<Record> aliased) {
		this(alias, aliased, null);
	}

	private HydrantIndispoTemporaire(String alias, Table<Record> aliased, Field<?>[] parameters) {
		super(alias, Remocra.REMOCRA, aliased, parameters, "Indisponibilié temporaire d'hydrant");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<Record, Long> getIdentity() {
		return Keys.IDENTITY_HYDRANT_INDISPO_TEMPORAIRE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<Record> getPrimaryKey() {
		return Keys.HYDRANT_INDISPO_TEMPORAIRE_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<Record>> getKeys() {
		return Arrays.<UniqueKey<Record>>asList(Keys.HYDRANT_INDISPO_TEMPORAIRE_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<Record, ?>> getReferences() {
		return Arrays.<ForeignKey<Record, ?>>asList(Keys.HYDRANT_INDISPO_TEMPORAIRE__FK_HYDRANT_INDISPO_TEMPORAIRE_STATUT);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public HydrantIndispoTemporaire as(String alias) {
		return new HydrantIndispoTemporaire(alias, this);
	}

	/**
	 * Rename this table
	 */
	public HydrantIndispoTemporaire rename(String name) {
		return new HydrantIndispoTemporaire(name, null);
	}
}
