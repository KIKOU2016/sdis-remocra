/**
 * This class is generated by jOOQ
 */
package fr.sdis83.remocra.db.model.prevarisc;


import fr.sdis83.remocra.db.model.prevarisc.tables.Adressecommune;
import fr.sdis83.remocra.db.model.prevarisc.tables.Adresserue;
import fr.sdis83.remocra.db.model.prevarisc.tables.Etablissement;

import javax.annotation.Generated;

import org.jooq.Record;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>prevarisc</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<Record> ADRESSECOMMUNE_PKEY = UniqueKeys0.ADRESSECOMMUNE_PKEY;
	public static final UniqueKey<Record> ADRESSERUE_PKEY = UniqueKeys0.ADRESSERUE_PKEY;
	public static final UniqueKey<Record> ETABLISSEMENT_PKEY = UniqueKeys0.ETABLISSEMENT_PKEY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<Record> ADRESSECOMMUNE_PKEY = createUniqueKey(Adressecommune.ADRESSECOMMUNE, Adressecommune.ADRESSECOMMUNE.NUMINSEE_COMMUNE);
		public static final UniqueKey<Record> ADRESSERUE_PKEY = createUniqueKey(Adresserue.ADRESSERUE, Adresserue.ADRESSERUE.ID_RUE);
		public static final UniqueKey<Record> ETABLISSEMENT_PKEY = createUniqueKey(Etablissement.ETABLISSEMENT, Etablissement.ETABLISSEMENT.ID_ETABLISSEMENT);
	}
}
